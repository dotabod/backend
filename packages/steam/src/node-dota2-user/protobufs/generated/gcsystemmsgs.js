"use strict";
// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.4.1
//   protoc               v5.28.3
// source: gcsystemmsgs.proto
Object.defineProperty(exports, "__esModule", { value: true });
exports.EGCBaseClientMsg = exports.ESOMsg = void 0;
exports.eSOMsgFromJSON = eSOMsgFromJSON;
exports.eSOMsgToJSON = eSOMsgToJSON;
exports.eGCBaseClientMsgFromJSON = eGCBaseClientMsgFromJSON;
exports.eGCBaseClientMsgToJSON = eGCBaseClientMsgToJSON;
/* eslint-disable */
var ESOMsg;
(function (ESOMsg) {
    ESOMsg[ESOMsg["k_ESOMsg_Create"] = 21] = "k_ESOMsg_Create";
    ESOMsg[ESOMsg["k_ESOMsg_Update"] = 22] = "k_ESOMsg_Update";
    ESOMsg[ESOMsg["k_ESOMsg_Destroy"] = 23] = "k_ESOMsg_Destroy";
    ESOMsg[ESOMsg["k_ESOMsg_CacheSubscribed"] = 24] = "k_ESOMsg_CacheSubscribed";
    ESOMsg[ESOMsg["k_ESOMsg_CacheUnsubscribed"] = 25] = "k_ESOMsg_CacheUnsubscribed";
    ESOMsg[ESOMsg["k_ESOMsg_UpdateMultiple"] = 26] = "k_ESOMsg_UpdateMultiple";
    ESOMsg[ESOMsg["k_ESOMsg_CacheSubscriptionRefresh"] = 28] = "k_ESOMsg_CacheSubscriptionRefresh";
    ESOMsg[ESOMsg["k_ESOMsg_CacheSubscribedUpToDate"] = 29] = "k_ESOMsg_CacheSubscribedUpToDate";
})(ESOMsg || (exports.ESOMsg = ESOMsg = {}));
function eSOMsgFromJSON(object) {
    switch (object) {
        case 21:
        case "k_ESOMsg_Create":
            return ESOMsg.k_ESOMsg_Create;
        case 22:
        case "k_ESOMsg_Update":
            return ESOMsg.k_ESOMsg_Update;
        case 23:
        case "k_ESOMsg_Destroy":
            return ESOMsg.k_ESOMsg_Destroy;
        case 24:
        case "k_ESOMsg_CacheSubscribed":
            return ESOMsg.k_ESOMsg_CacheSubscribed;
        case 25:
        case "k_ESOMsg_CacheUnsubscribed":
            return ESOMsg.k_ESOMsg_CacheUnsubscribed;
        case 26:
        case "k_ESOMsg_UpdateMultiple":
            return ESOMsg.k_ESOMsg_UpdateMultiple;
        case 28:
        case "k_ESOMsg_CacheSubscriptionRefresh":
            return ESOMsg.k_ESOMsg_CacheSubscriptionRefresh;
        case 29:
        case "k_ESOMsg_CacheSubscribedUpToDate":
            return ESOMsg.k_ESOMsg_CacheSubscribedUpToDate;
        default:
            throw new globalThis.Error("Unrecognized enum value " + object + " for enum ESOMsg");
    }
}
function eSOMsgToJSON(object) {
    switch (object) {
        case ESOMsg.k_ESOMsg_Create:
            return "k_ESOMsg_Create";
        case ESOMsg.k_ESOMsg_Update:
            return "k_ESOMsg_Update";
        case ESOMsg.k_ESOMsg_Destroy:
            return "k_ESOMsg_Destroy";
        case ESOMsg.k_ESOMsg_CacheSubscribed:
            return "k_ESOMsg_CacheSubscribed";
        case ESOMsg.k_ESOMsg_CacheUnsubscribed:
            return "k_ESOMsg_CacheUnsubscribed";
        case ESOMsg.k_ESOMsg_UpdateMultiple:
            return "k_ESOMsg_UpdateMultiple";
        case ESOMsg.k_ESOMsg_CacheSubscriptionRefresh:
            return "k_ESOMsg_CacheSubscriptionRefresh";
        case ESOMsg.k_ESOMsg_CacheSubscribedUpToDate:
            return "k_ESOMsg_CacheSubscribedUpToDate";
        default:
            throw new globalThis.Error("Unrecognized enum value " + object + " for enum ESOMsg");
    }
}
var EGCBaseClientMsg;
(function (EGCBaseClientMsg) {
    EGCBaseClientMsg[EGCBaseClientMsg["k_EMsgGCPingRequest"] = 3001] = "k_EMsgGCPingRequest";
    EGCBaseClientMsg[EGCBaseClientMsg["k_EMsgGCPingResponse"] = 3002] = "k_EMsgGCPingResponse";
    EGCBaseClientMsg[EGCBaseClientMsg["k_EMsgGCToClientPollConvarRequest"] = 3003] = "k_EMsgGCToClientPollConvarRequest";
    EGCBaseClientMsg[EGCBaseClientMsg["k_EMsgGCToClientPollConvarResponse"] = 3004] = "k_EMsgGCToClientPollConvarResponse";
    EGCBaseClientMsg[EGCBaseClientMsg["k_EMsgGCCompressedMsgToClient"] = 3005] = "k_EMsgGCCompressedMsgToClient";
    EGCBaseClientMsg[EGCBaseClientMsg["k_EMsgGCCompressedMsgToClient_Legacy"] = 523] = "k_EMsgGCCompressedMsgToClient_Legacy";
    EGCBaseClientMsg[EGCBaseClientMsg["k_EMsgGCToClientRequestDropped"] = 3006] = "k_EMsgGCToClientRequestDropped";
    EGCBaseClientMsg[EGCBaseClientMsg["k_EMsgGCClientWelcome"] = 4004] = "k_EMsgGCClientWelcome";
    EGCBaseClientMsg[EGCBaseClientMsg["k_EMsgGCServerWelcome"] = 4005] = "k_EMsgGCServerWelcome";
    EGCBaseClientMsg[EGCBaseClientMsg["k_EMsgGCClientHello"] = 4006] = "k_EMsgGCClientHello";
    EGCBaseClientMsg[EGCBaseClientMsg["k_EMsgGCServerHello"] = 4007] = "k_EMsgGCServerHello";
    EGCBaseClientMsg[EGCBaseClientMsg["k_EMsgGCClientConnectionStatus"] = 4009] = "k_EMsgGCClientConnectionStatus";
    EGCBaseClientMsg[EGCBaseClientMsg["k_EMsgGCServerConnectionStatus"] = 4010] = "k_EMsgGCServerConnectionStatus";
})(EGCBaseClientMsg || (exports.EGCBaseClientMsg = EGCBaseClientMsg = {}));
function eGCBaseClientMsgFromJSON(object) {
    switch (object) {
        case 3001:
        case "k_EMsgGCPingRequest":
            return EGCBaseClientMsg.k_EMsgGCPingRequest;
        case 3002:
        case "k_EMsgGCPingResponse":
            return EGCBaseClientMsg.k_EMsgGCPingResponse;
        case 3003:
        case "k_EMsgGCToClientPollConvarRequest":
            return EGCBaseClientMsg.k_EMsgGCToClientPollConvarRequest;
        case 3004:
        case "k_EMsgGCToClientPollConvarResponse":
            return EGCBaseClientMsg.k_EMsgGCToClientPollConvarResponse;
        case 3005:
        case "k_EMsgGCCompressedMsgToClient":
            return EGCBaseClientMsg.k_EMsgGCCompressedMsgToClient;
        case 523:
        case "k_EMsgGCCompressedMsgToClient_Legacy":
            return EGCBaseClientMsg.k_EMsgGCCompressedMsgToClient_Legacy;
        case 3006:
        case "k_EMsgGCToClientRequestDropped":
            return EGCBaseClientMsg.k_EMsgGCToClientRequestDropped;
        case 4004:
        case "k_EMsgGCClientWelcome":
            return EGCBaseClientMsg.k_EMsgGCClientWelcome;
        case 4005:
        case "k_EMsgGCServerWelcome":
            return EGCBaseClientMsg.k_EMsgGCServerWelcome;
        case 4006:
        case "k_EMsgGCClientHello":
            return EGCBaseClientMsg.k_EMsgGCClientHello;
        case 4007:
        case "k_EMsgGCServerHello":
            return EGCBaseClientMsg.k_EMsgGCServerHello;
        case 4009:
        case "k_EMsgGCClientConnectionStatus":
            return EGCBaseClientMsg.k_EMsgGCClientConnectionStatus;
        case 4010:
        case "k_EMsgGCServerConnectionStatus":
            return EGCBaseClientMsg.k_EMsgGCServerConnectionStatus;
        default:
            throw new globalThis.Error("Unrecognized enum value " + object + " for enum EGCBaseClientMsg");
    }
}
function eGCBaseClientMsgToJSON(object) {
    switch (object) {
        case EGCBaseClientMsg.k_EMsgGCPingRequest:
            return "k_EMsgGCPingRequest";
        case EGCBaseClientMsg.k_EMsgGCPingResponse:
            return "k_EMsgGCPingResponse";
        case EGCBaseClientMsg.k_EMsgGCToClientPollConvarRequest:
            return "k_EMsgGCToClientPollConvarRequest";
        case EGCBaseClientMsg.k_EMsgGCToClientPollConvarResponse:
            return "k_EMsgGCToClientPollConvarResponse";
        case EGCBaseClientMsg.k_EMsgGCCompressedMsgToClient:
            return "k_EMsgGCCompressedMsgToClient";
        case EGCBaseClientMsg.k_EMsgGCCompressedMsgToClient_Legacy:
            return "k_EMsgGCCompressedMsgToClient_Legacy";
        case EGCBaseClientMsg.k_EMsgGCToClientRequestDropped:
            return "k_EMsgGCToClientRequestDropped";
        case EGCBaseClientMsg.k_EMsgGCClientWelcome:
            return "k_EMsgGCClientWelcome";
        case EGCBaseClientMsg.k_EMsgGCServerWelcome:
            return "k_EMsgGCServerWelcome";
        case EGCBaseClientMsg.k_EMsgGCClientHello:
            return "k_EMsgGCClientHello";
        case EGCBaseClientMsg.k_EMsgGCServerHello:
            return "k_EMsgGCServerHello";
        case EGCBaseClientMsg.k_EMsgGCClientConnectionStatus:
            return "k_EMsgGCClientConnectionStatus";
        case EGCBaseClientMsg.k_EMsgGCServerConnectionStatus:
            return "k_EMsgGCServerConnectionStatus";
        default:
            throw new globalThis.Error("Unrecognized enum value " + object + " for enum EGCBaseClientMsg");
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2NzeXN0ZW1tc2dzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3Byb3RvYnVmcy9nZW5lcmF0ZWQvZ2NzeXN0ZW1tc2dzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxzREFBc0Q7QUFDdEQsWUFBWTtBQUNaLGdDQUFnQztBQUNoQyxpQ0FBaUM7QUFDakMsNkJBQTZCOzs7QUFlN0Isd0NBNkJDO0FBRUQsb0NBcUJDO0FBa0JELDREQTRDQztBQUVELHdEQStCQztBQWhLRCxvQkFBb0I7QUFFcEIsSUFBWSxNQVNYO0FBVEQsV0FBWSxNQUFNO0lBQ2hCLDBEQUFvQixDQUFBO0lBQ3BCLDBEQUFvQixDQUFBO0lBQ3BCLDREQUFxQixDQUFBO0lBQ3JCLDRFQUE2QixDQUFBO0lBQzdCLGdGQUErQixDQUFBO0lBQy9CLDBFQUE0QixDQUFBO0lBQzVCLDhGQUFzQyxDQUFBO0lBQ3RDLDRGQUFxQyxDQUFBO0FBQ3ZDLENBQUMsRUFUVyxNQUFNLHNCQUFOLE1BQU0sUUFTakI7QUFFRCxTQUFnQixjQUFjLENBQUMsTUFBVztJQUN4QyxRQUFRLE1BQU0sRUFBRSxDQUFDO1FBQ2YsS0FBSyxFQUFFLENBQUM7UUFDUixLQUFLLGlCQUFpQjtZQUNwQixPQUFPLE1BQU0sQ0FBQyxlQUFlLENBQUM7UUFDaEMsS0FBSyxFQUFFLENBQUM7UUFDUixLQUFLLGlCQUFpQjtZQUNwQixPQUFPLE1BQU0sQ0FBQyxlQUFlLENBQUM7UUFDaEMsS0FBSyxFQUFFLENBQUM7UUFDUixLQUFLLGtCQUFrQjtZQUNyQixPQUFPLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQztRQUNqQyxLQUFLLEVBQUUsQ0FBQztRQUNSLEtBQUssMEJBQTBCO1lBQzdCLE9BQU8sTUFBTSxDQUFDLHdCQUF3QixDQUFDO1FBQ3pDLEtBQUssRUFBRSxDQUFDO1FBQ1IsS0FBSyw0QkFBNEI7WUFDL0IsT0FBTyxNQUFNLENBQUMsMEJBQTBCLENBQUM7UUFDM0MsS0FBSyxFQUFFLENB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