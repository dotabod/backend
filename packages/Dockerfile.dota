# Using a more specific version to ensure reproducibility
FROM node:20-alpine3.17 as base

# Add Git, Python3, make, g++ in a single RUN command
RUN apk add --no-cache git python3 make g++ && yarn cache clean

# Set build context and work directories
ARG BUILD_CONTEXT
WORKDIR /app

# Copy just the relevant package.json and yarn.lock files
COPY package.json .yarnrc.yml yarn.lock ./
COPY packages/settings/package.json ./packages/settings/
COPY .yarn/releases/ ./.yarn/releases/
COPY .yarn/cache/ ./.yarn/cache/
COPY $BUILD_CONTEXT/package.json ./$BUILD_CONTEXT/

# Install dependencies
RUN yarn set version berry
RUN yarn install

#-------------------------

FROM base as builder

# Copy source code and build configurations
COPY tsconfig.json ./
COPY packages/settings/tsconfig.json packages/settings/
COPY packages/settings/src packages/settings/src/
COPY $BUILD_CONTEXT/tsconfig.json $BUILD_CONTEXT/
COPY $BUILD_CONTEXT/src $BUILD_CONTEXT/src/

WORKDIR /app/
RUN yarn builds
RUN yarn buildd

#-------------------------

FROM node:20-alpine3.17 as prod

ARG BUILD_CONTEXT
ARG NODE_ENV

# Meta-data and labels
LABEL org.opencontainers.image.source="https://github.com/dotabod/backend" \
    org.opencontainers.image.description="Dotabod container: ${BUILD_CONTEXT}" \
    org.opencontainers.image.licenses="AGPL-3.0"

# Create unprivileged user and switch to it
RUN adduser -D dotadockeruser
USER dotadockeruser

# Copy relevant build artifacts
WORKDIR /app
COPY --from=builder --chown=dotadockeruser /app/package.json /app/tsconfig.json ./
COPY --from=builder --chown=dotadockeruser /app/packages/settings/package.json /app/packages/settings/
COPY --from=builder --chown=dotadockeruser /app/$BUILD_CONTEXT/package.json ./$BUILD_CONTEXT/
COPY --from=builder --chown=dotadockeruser /app/packages/settings/dist packages/settings/dist/
COPY --from=builder --chown=dotadockeruser /app/$BUILD_CONTEXT/dist $BUILD_CONTEXT/dist/

# Copy node_modules
COPY --from=builder --chown=dotadockeruser /app/node_modules ./node_modules

# Environment and CMD
ENV NODE_ENV=$NODE_ENV
CMD yarn workspace @dotabod/dota run docker:$NODE_ENV
