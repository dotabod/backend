name: Docker Image CI

on:
  push:
    branches:
      - "**"

jobs:
  dota:
    runs-on: ubuntu-latest
    environment: prod
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Extract branch name
        shell: bash
        run: echo "BRANCH_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to ghcr
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHA_PAT }}

      - name: Build and push
        uses: docker/bake-action@v6
        with:
          push: true
          provenance: false
          targets: dota  # Explicitly specify the 'dota' target
          set: |
            *.cache-from=type=gha
            *.cache-to=type=gha,mode=max
            *.platform=linux/arm64,linux/amd64/v3
            dota.tags=ghcr.io/${{ github.repository_owner }}/dota:${{ env.BRANCH_NAME }}

  twitch-chat:
    runs-on: ubuntu-latest
    environment: prod
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Extract branch name
        shell: bash
        run: echo "BRANCH_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to ghcr
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHA_PAT }}

      - name: Build and push
        uses: docker/bake-action@v6
        with:
          push: true
          provenance: false
          targets: twitch-chat  # Explicitly specify the 'twitch-chat' target
          set: |
            *.cache-from=type=gha
            *.cache-to=type=gha,mode=max
            *.platform=linux/arm64,linux/amd64/v3
            twitch-chat.tags=ghcr.io/${{ github.repository_owner }}/twitch-chat:${{ env.BRANCH_NAME }}

  steam:
    runs-on: ubuntu-latest
    environment: prod
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Extract branch name
        shell: bash
        run: echo "BRANCH_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to ghcr
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHA_PAT }}

      - name: Build and push
        uses: docker/bake-action@v6
        with:
          push: true
          provenance: false
          targets: steam  # Explicitly specify the 'steam' target
          set: |
            *.cache-from=type=gha
            *.cache-to=type=gha,mode=max
            *.platform=linux/arm64,linux/amd64/v3
            steam.tags=ghcr.io/${{ github.repository_owner }}/steam:${{ env.BRANCH_NAME }}

  twitch-events:
    runs-on: ubuntu-latest
    environment: prod
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Extract branch name
        shell: bash
        run: echo "BRANCH_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to ghcr
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHA_PAT }}

      - name: Build and push
        uses: docker/bake-action@v6
        with:
          push: true
          provenance: false
          targets: twitch-events  # Explicitly specify the 'twitch-events' target
          set: |
            *.cache-from=type=gha
            *.cache-to=type=gha,mode=max
            *.platform=linux/arm64,linux/amd64/v3
            twitch-events.tags=ghcr.io/${{ github.repository_owner }}/twitch-events:${{ env.BRANCH_NAME }}
