services:
  twitch-chat-listener:
    build:
      context: twitch-chat-listener
      target: dev
      dockerfile: ../web/Dockerfile # Reusing same nodejs dockerfile
    hostname: twitch-chat-listener
    ports:
      - '5005:5005'
    env_file: .env.local
    environment:
      - NEW_RELIC_APP_NAME="DEV twitch chat listener"
    volumes:
      - ./twitch-chat-listener/src:/app/src
  twitch-eventsub-listener:
    build:
      context: twitch-eventsub-listener
      target: dev
      dockerfile: ../web/Dockerfile # Reusing same nodejs dockerfile
    hostname: twitch-eventsub-listener
    ports:
      - '82:5010'
    env_file: .env.local
    environment:
      - NEW_RELIC_APP_NAME="DEV twitch eventsub listener"
      - PORT=5010
    volumes:
      - ./twitch-eventsub-listener/src:/app/src
  web:
    build:
      context: web
      target: dev
    hostname: web
    ports:
      - '81:5000'
      - '9229:9229'
    env_file: .env.local
    volumes:
      - ./web/src:/app/src
      - steam_auth:/app/src/steam/volumes
  nginx:
    volumes:
    - ./nginx/default.conf:/etc/nginx/templates/default.conf.template
    env_file: .env.local
    build: ./nginx
    ports:
      - '80:80'
      - '443:443'
  mongodb:
    image: "mongo"
    ports:
      - "27017:27017"
    volumes:
      - "mongodb_data:/data/db"
      - ./mongodb/init.sh:/docker-entrypoint-initdb.d/init_mongo.js

# Volumes are useful for data persistence, so the data will not be deleted
# even later you call command docker-compose down.
volumes:
  mongodb_data:
  steam_auth: